apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/instance: ""
    app.kubernetes.io/version: ""
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: cert-manager
    app.kubernetes.io/created-by: terraform
    app.kubernetes.io/managed-by: terraform
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: ""
      app.kubernetes.io/version: ""
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/part-of: cert-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: cert-manager
      namespace: cert-manager
      labels:
        app.kubernetes.io/instance: ""
        app.kubernetes.io/version: ""
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: cert-manager
        app.kubernetes.io/created-by: terraform
        app.kubernetes.io/managed-by: terraform
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9402"
        prometheus.io/scrape: "true"
      spec:
        automountServiceAccountToken: false
        containers:
          - args:
              - --v=2
              - --cluster-resource-namespace=$(POD_NAMESPACE)
              - --leader-election-namespace=kube-system
            env:
              - name: POD_NAMESPACE
                value: cert-manager
            image: quay.io/jetstack/cert-manager-controller:v1.8.1
            imagePullPolicy: Always
            name: cert-manager
            ports:
              - containerPort: 9402
                protocol: TCP
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/run/secrets/kubernetes.io/serviceaccount/
                mountPropagation: None
                name: service-token
                readOnly: true
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
          - name: service-token
            secret:
              defaultMode: 420
              optional: false
              secretName: cert-manager-token-76jsd